/* Using mobile first approach */
/* Defining color palette variables using pseudo class selector 'root' */
:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
}

/* Topography */
html {
  /* 62.5% of 16px = 10px: By default font-size of html element is 16px */
  font-size: 62.5%;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5; /* 1.5 * current font-size */
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem; /* Inter font already have some margin below and top of characters */
}

h1 {
  font-size: 7rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

h2 {
  font-size: 4rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

h3 {
  font-size: 3rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

p {
  margin-top: 0; /* let the heading decide the margin above the paragraph */
}

/* media query of screens larger than 1024px */
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* Links */

a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem; /* 20px */
  font-weight: bold;
}

/* adding content dynamically using 'after' pseudo class */
.link-arrow::after {
  content: "-->"; /* TODO: comeback and replace with icon */
  margin-left: 5px;
  transition: margin 0.15s; /* margin should change in 0.15 seconds */
}

/* on hover, targeting content that is added dynamically */
.link-arrow:hover::after {
  margin-left: 10px;
}

/* media query for links component  */
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */

/* Structure */
.badge {
  border-radius: 2rem; /* 20px */
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem;
  white-space: nowrap; /* whatever appears inside will be on the same line. */
}

/* using BEM (Block, Element, Modifier naming convention) */
.badge--primary {
  background: var(--color-primary);
  color: white;
}

.badge--secondary {
  background: var(--color-secondary);
  color: white;
}

.badge--small {
  font-size: 1.6rem;
}

/* media query for badge component */
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}
