/* Using mobile first approach */
/* Defining color palette variables using pseudo class selector 'root' */
:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
}

/* 
  Universal rule 
  TODO: Learn more about box-sizing
*/
*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Topography */
html {
  /* 62.5% of 16px = 10px: By default font-size of html element is 16px */
  font-size: 62.5%;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5; /* 1.5 * current font-size */
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem; /* Inter font already have some margin below and top of characters */
}

h1 {
  font-size: 7rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

h2 {
  font-size: 4rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

h3 {
  font-size: 3rem; /* 1rem = 10px i.e. 62.5% of 16px (font size of html element)*/
}

p {
  margin-top: 0; /* let the heading decide the margin above the paragraph */
}

/* media query of screens larger than 1024px */
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* Links */

a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem; /* 20px */
  font-weight: bold;
}

/* adding content dynamically using 'after' pseudo class */
.link-arrow::after {
  content: "-->"; /* TODO: comeback and replace with icon */
  margin-left: 5px;
  transition: margin 0.15s; /* margin should change in 0.15 seconds */
}

/* on hover, targeting content that is added dynamically */
.link-arrow:hover::after {
  margin-left: 10px;
}

/* media query for links component  */
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */

/* Structure */
.badge {
  border-radius: 2rem; /* 20px */
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem;
  white-space: nowrap; /* whatever appears inside will be on the same line. */
}

/* 
  variations of badges
  using OOP # 2 i.e. separate structure from skin
  using BEM (Block, Element, Modifier naming convention)
    - separate element and modifier using --.
*/
.badge--primary {
  background: var(--color-primary);
  color: white;
}

.badge--secondary {
  background: var(--color-secondary);
  color: white;
}

.badge--small {
  font-size: 1.6rem;
}

/* media query for badge component */
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/* List */
.list {
  list-style: none;
  padding-left: 0;
  color: var(--color-headings);
}

/* 
  variations of list
  using OOP # 2 i.e. separate structure from skin
  using BEM (Block, Element, Modifier naming convention)
    - separating block from its elements by using __
*/
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../images/tick.svg);
  padding-left: 3rem; /* by default tick image is off the screen (TODO: take a look why?) */
}

/* using nesting (more specific) */
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

/* media query for lists components */
@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Icons */
.icon {
  width: 40px;
  height: 40px;
}

/* Icons variation */
.icon--primary {
  fill: var(--color-primary);
}

.icon-container {
  /* this is NOT a variation or modifier of icon class */
  background: #f3f9fa;
  width: 64px; /* here absolute units is used for icons because their size does not change relative to screen or font size. */
  height: 64px;
  border-radius: 100%;
  display: inline-flex; /* span is an inline element, inline have not effect on CSS properties */
  justify-content: center; /* primary axis of flex */
  align-items: center; /* vertical axis of flex */
}

/* Buttons */
.btn {
  border-radius: 40px;
  border: 0;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0;
  padding: 2rem 3rem;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
}

/* Button variations */
.btn--primary {
  background: var(--color-primary);
  color: #fff;
}

.btn--primary:hover {
  background: #3a8ffd;
}

.btn--secondary {
  background: var(--color-secondary);
  color: #fff;
}

.btn--secondary:hover {
  background: #00c8eb;
}

.btn--accent {
  background: var(--color-accent);
  color: #fff;
}

.btn--accent:hover {
  background: #ec3000;
}

/* by default browser sets the box-sizing of button elements to border-box */
.btn--block {
  width: 100%;
  display: inline-block; /* anchor elements are inline by default */
}

.btn--outline {
  background: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}

.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}

/* media query for buttons */
@media screen and (width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/* Inputs */
.input {
  padding: 1.5rem 3.5rem;
  border: 1px solid #ccc;
  border-radius: 30px;
  outline: 0; /* By default web browsers add outline for accessibility purpose */
  color: var(--color-headings);
  font-size: 2rem;
}
/* pseudo element to select placeholder text */
::placeholder {
  color: #cdcdd7;
}

/* media query for input field */
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}
